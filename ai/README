AIPlanner - Deep Reinforcement Learning Financial Planner.

Would like to run on Ubuntu 18.04, but:

    Ubuntu 18.04 has CUDA 9.1.
    Google won't be releasing tensorflow for CUDA 9.1, will release for 9.2.

Hence for time being using Amazon Deep Learning AMI (Ubuntu) Version
8.0 based on Ubuntu 16.04 - CUDA 9 - ami-dff741a0 with tensorflow
pre-installed.

Obtaining additional required components
----------------------------------------

Installing additional required components on Ubuntu 18.04:

    sudo
    apt install python3-pip python3-dev python3-mpi4py nodejs npm
    pip3 install tensorflow
    pip3 install gym
    exit

Installing additional required components on Amazon Deep Learning AMI
(Ubuntu):

    source activate tensorflow_p36
    pip install mpi4py
    pip install joblib
    pip install gym

    [ Get latest Node.js per https://nodejs.org/en/download/ ]
    cd
    curl https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz | tar xJf -
    export PATH=$HOME/node-v8.11.3-linux-x64/bin:$PATH

npm install -g typescript
npm install -g @angular/cli

Generating required assets (images)
-----------------------------------

Generate the images required for the website:

    cd ai/angular/src/assets.generate
    ./run

Installing an outbound mailer
-----------------------------

A mail transfer agent is required to provide end users with
notification that models have been trained.

    sudo apt install postfix
    sudo dpkg-reconfigure postfix
        Config type: Internet Site
        Site: aiplanner.com
        Root mail: gordoni@gordoni.com
        Accept mail for: aiplanner.com
        Synchronous updates: no
        Local networks: <leave as is>
        Mailbox size limit: 0
        Address extension: +
        Internet protocols: all

You may also need to add an SPF record for the site so messages from
it don't end up in the spam folder. Something like:

    Type: TXT
    Host: @
    Value: v=spf1 ip4:18.206.41.110 ~all
    TTL: 3600

Consult your domain provider for details of how to do this.

Development
-----------

Run the API server (the Angular server will proxy to it when handling
/api requests):

    cd aiplanner/ai/web
    ./serve_model.py --serve http

On the same machine in a separate shell window run the runq server
(which performs running long running model traning and evaluations):

    cd aiplanner/ai/web
    nice ./serve_model.py --serve runq --admin-email=<you@yourdomain> \
        --notify-email=<you@yourdomain> --notify-name="<FirstName> <LastName>"

On the same machine in another shell window run the Angular server:

    export PATH=$HOME/node-v8.11.3-linux-x64/bin:$PATH
    cd aiplanner/ai/angular
    ng serve --host 0.0.0.0 --public-host dev.aiplanner.com

Connect to the front end using a browser (need to open port 4200 of
development machine firewall unless doing development on localhost):

    http://dev.aiplanner.com:4200/
