# AIPlanner - Deep Learning Financial Planner
# Copyright (C) 2018-2019 Gordon Irlam
#
# All rights reserved. This program may not be used, copied, modified,
# or redistributed without permission.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.

master_consume_floor = 1e4
master_consume_ceiling = 1e6

master_couple_probability = 0 # Train model using single scenario even for couples to avoid couple stochasticity.

master_age_start = 20
    # Be sure to train with variable market data, otherwise may market time using age rather than the market data.
master_age_start2_low = 10
master_age_start2_high = 30

# Ensure life expectancy isn't a proxy for age.
# This helps ensure we use spias_purchase_years rather than life expectancy in determining whether to purchase SPIAs.
master_life_expectancy_additional_low = -2
master_life_expectancy_additional_high = 5
master_life_expectancy_additional2_low = -2
master_life_expectancy_additional2_high = 5

master_age_retirement_low = 50
master_age_retirement_high = 80

master_couple_death_preretirement_consume = 'pro_rata' # Prevent over consumption in event of death of high wage earning member of couple.

master_income_preretirement_low = 2e3 # Produces desired post-tax savings for retirement distribution.
master_income_preretirement_high = 2e5
master_income_preretirement2_low = 2e3
master_income_preretirement2_high = 2e5
master_consume_preretirement = 0
master_consume_preretirement_income_ratio_low = 0.4
master_consume_preretirement_income_ratio_high = 0.6 # Try to ensure will have net saving for retirement after taxes.

master_have_401k_low = False
master_have_401k_high = True
master_have_401k2_low = False
master_have_401k2_high = True

master_guaranteed_income = '''[
    {"owner": "self",   "age": null, "probability": 0.2, "payout": [5e3, 1e5], "source_of_funds": "tax_free"},
    {"owner": "self",   "age": null, "probability": 0.2, "payout": [5e3, 1e5], "source_of_funds": "tax_deferred"},
    {"owner": "self",   "age": null, "probability": 0.2, "payout": [5e3, 1e5], "source_of_funds": "taxable"},
    {"owner": "self",   "age": null, "probability": 1.0, "payout": [5e3, 5e4], "source_of_funds": "taxable", "type": "Social Security"},
    {"owner": "spouse", "age": null, "probability": 0.2, "payout": [5e3, 1e5], "source_of_funds": "tax_free"},
    {"owner": "spouse", "age": null, "probability": 0.2, "payout": [5e3, 1e5], "source_of_funds": "tax_deferred"},
    {"owner": "spouse", "age": null, "probability": 0.2, "payout": [5e3, 1e5], "source_of_funds": "taxable"},
    {"owner": "spouse", "age": null, "probability": 1.0, "payout": [5e3, 5e4], "source_of_funds": "taxable", "type": "Social Security"}
]'''
    # Probability of Social Security set to 1, even though it is slightly less, to avoid the possibility of very large negative reward to go and reward values
    # at very advanced ages for large gamma values. At very advanced ages, without any guaranteed income, life expectancy is roughly 2, and initially
    # we keep consuming half the remaining portfolio each year. For large gamma values this leads utility to becoming quickly very negative.
    # Problem only observed when training couple model. Not clear why.

master_p_weighted_low = 1e3
master_p_weighted_high = 1e5
master_p_tax_free = 0
master_p_tax_free_weight_low = 0
master_p_tax_free_weight_high = 50
master_p_tax_deferred = 0
master_p_tax_deferred_weight_low = 1 # Weight low of 1 to avoid all weights zero.
master_p_tax_deferred_weight_high = 100
master_p_taxable_stocks = 0
master_p_taxable_stocks_weight_low = 0
master_p_taxable_stocks_weight_high = 30
master_p_taxable_real_bonds = 0
master_p_taxable_real_bonds_weight_low = 0
master_p_taxable_real_bonds_weight_high = 20
master_p_taxable_nominal_bonds = 0
master_p_taxable_nominal_bonds_weight_low = 0
master_p_taxable_nominal_bonds_weight_high = 20
master_p_taxable_stocks_basis_fraction_low = 0
master_p_taxable_stocks_basis_fraction_high = 2

master_gamma_low = 1.5
master_gamma_high = 6.0
