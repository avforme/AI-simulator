#!/bin/bash

# AIPlanner - Deep Learning Financial Planner
# Copyright (C) 2018 Gordon Irlam
#
# All rights reserved. This program may not be used, copied, modified,
# or redistributed without permission.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.

# Code based on validate/run-ai.

AIPLANNER_HOME=${AIPLANNER_HOME:-$HOME/aiplanner}
PARALLEL=${PARALLEL:-True}  # Set to "False" to run seeds sequentially rather than in parallel.
SEEDS=${SEEDS:-10}
if [ -n "$EVAL_NUM_TIMESTEPS" ]; then
    EXTRA_EVAL_ARGS="--eval-num-timesteps $EVAL_NUM_TIMESTEPS"
fi

EXTRA_ARGS=$*
AI_DIR=$AIPLANNER_HOME/ai
PYTHONPATH_ADD=$AI_DIR/baselines:$AI_DIR/gym-fin:$AIPLANNER_HOME/spia
if [ -z "$PYTHONPATH" ]; then
    export PYTHONPATH=$PYTHONPATH_ADD
else
    export PYTHONPATH=$PYTHONPATH_ADD:$PYTHONPATH
fi
CONFIG_FILE=$AI_DIR/aiplanner-scenario.txt
TRAIN_FILE=$AI_DIR/aiplanner-scenario-train.txt
EVAL_FILE=$AI_DIR/aiplanner-scenario-eval.txt

if [ "$PARALLEL" = True ]; then
    TRAIN=train_parallel
    EVALUATE=evaluate_parallel
else
    TRAIN=train
    EVALUATE=evaluate
fi

train () {

    MODEL_NAME=$1
    ARGS=$2

    SEED=0
    set -o pipefail
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        TEMPFILE=`tempfile -p valid`
        $AI_DIR/train_ppo1.py -c $CONFIG_FILE -c $TRAIN_FILE --model-dir=$MODEL_DIR $ARGS --train-seed=$SEED $EXTRA_ARGS 2>&1 | tee -a $TEMPFILE || exit 1
        mv $TEMPFILE $MODEL_DIR/train.log
        SEED=`expr $SEED + 1`
    done
}

eval () {

    MODEL_NAME=$1
    EVAL_NAME=$2
    ARGS=$3

    SEED=0
    set -o pipefail
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        $AI_DIR/eval_model.py -c $CONFIG_FILE -c $EVAL_FILE --model-dir=$MODEL_DIR $ARGS $EXTRA_ARGS $EXTRA_EVAL_ARGS 2>&1 | tee $MODEL_DIR/eval-$EVAL_NAME.log || exit 1
        SEED=`expr $SEED + 1`
    done
}

train_parallel () {

    MODEL_NAME=$1
    ARGS=$2

    SEED=0
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        # Output directory must not exist when tensorflow save() is called to save the model hence we can't write the log within it; instead log to a tempfile.
        TEMPFILE=`tempfile -p valid`
        TEMPFILES[$SEED]=$TEMPFILE
        $AI_DIR/train_ppo1.py -c $CONFIG_FILE -c $TRAIN_FILE --model-dir=$MODEL_DIR $ARGS --train-seed=$SEED $EXTRA_ARGS > $TEMPFILE 2>&1 &
        SEED=`expr $SEED + 1`
    done
    wait

    SEED=0
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        mv ${TEMPFILES[$SEED]} $MODEL_DIR/train.log
        SEED=`expr $SEED + 1`
    done
}

evaluate_parallel () {

    MODEL_NAME=$1
    EVAL_NAME=$2
    ARGS=$3

    SEED=0
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        $AI_DIR/eval_model.py -c $CONFIG_FILE -c $EVAL_FILE --model-dir=$MODEL_DIR $ARGS $EXTRA_ARGS $EXTRA_EVAL_ARGS > $MODEL_DIR/eval-$EVAL_NAME.log 2>&1 &
        SEED=`expr $SEED + 1`
    done
    wait
}

$TRAIN retired65-defined_benefits16e3-tax_free5e5 "-c $EVAL_FILE --master-age-start=65"
    # Eval parameters will override train parameters by virtue of being specified last and/or not containing low/high values.
$EVAL retired65-defined_benefits16e3-tax_free5e5 specific '--master-age-start=65'
$TRAIN start_age50-age_retirement65-defined_benefits16e3-tax_free5e5 "-c $EVAL_FILE"
$EVAL start_age50-age_retirement65-defined_benefits16e3-tax_free5e5 specific
$TRAIN generic
$EVAL generic start_age65-age_retirement65-defined_benefits16e3-tax_free5e5 '--master-age-start=65'
$EVAL generic start_age50-age_retirement65-defined_benefits16e3-tax_free5e5

# Notes on tweaks that have been tried out:
#
