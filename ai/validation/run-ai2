#!/bin/bash

# AIPlanner - Deep Learning Financial Planner
# Copyright (C) 2018 Gordon Irlam
#
# All rights reserved. This program may not be used, copied, modified,
# or redistributed without permission.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.

AIPLANNER_HOME=${AIPLANNER_HOME:-$HOME/aiplanner}

source $AIPLANNER_HOME/ai/helpers.bash

CONFIG_FILE=$AI_DIR/validation/aiplanner-scenario2.txt
TRAIN_FILE=$AI_DIR/validation/aiplanner-scenario2.txt

run () {

    local MODEL_NAME=$1
    local P_VALUES=$2
    local ARGS=$3
    local TRAIN_ARGS=$4
    local EVAL_ARGS=$5

    train $MODEL_NAME "--train-save-frequency=10000 $TRAIN_ARGS $ARGS"
    for P_VALUE in $P_VALUES; do
        evaluate $MODEL_NAME p_tax_free$P_VALUE "--eval-p-tax-free=$P_VALUE $EVAL_ARGS $ARGS"
    done

    SEED=0
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        $AI_DIR/extract_model.py -c aiplanner-scenario2.txt --model-dir=$MODEL_DIR $ARGS $EXTRA_ARGS --age-range 40 100 --num-age-steps=60 --p-type=tax_free \
            > $MODEL_DIR/extract.log 2>&1 &
        SEED=`expr $SEED + 1`
    done
    wait

    SEED=0
    while [ $SEED -lt $SEEDS ]; do
        MODEL_DIR=aiplanner.$MODEL_NAME-seed_$SEED.tf
        for AIPLANNER_LINEAR in $MODEL_DIR/aiplanner-linear*.csv; do
            export AIPLANNER_PREFIX=$MODEL_DIR/aiplanner
            export AIPLANNER_TIMESTEPS=`echo $AIPLANNER_LINEAR | sed 's/^.*-linear\([0-9]*\)\.csv$/\1/'`
            $AI_DIR/validation/plot2.gnuplot
        done
        for WHAT in consume real_spias_purchase nominal_spias_purchase stocks; do
            convert -delay 5 -loop 0 $MODEL_DIR/aiplanner-$WHAT[0-9]*.gif $MODEL_DIR/aiplanner-$WHAT-animated.gif
        done
        SEED=`expr $SEED + 1`
    done

    # MODEL_ARGS='--master-age-start=40 --master-life-expectancy-additional=3 --master-age-retirement=65 --master-defined-benefits=[{"owner":"self","age":null,"probability":1.0,"payout":16e3,"source_of_funds":"tax_free"}] --master-p-tax-deferred=0 --master-p-taxable-stocks=0 --master-p-taxable-iid-bonds=0'
    # for P_VALUE in PVALUES; do
    #     train $MODEL_NAME-p_tax_free$P_VALUE "--master-p-tax-free=$P_VALUE $MODEL_ARGS $TRAIN_ARGS $ARGS"
    #     evaluate $MODEL_NAME-p_tax_free$P_VALUE p_tax_free$P_VALUE "--eval-p-tax-free=$P_VALUE $MODEL_ARGS $EVAL_ARGS $ARGS"
    # done
}

policy_only () {

    local MODEL_NAME=$1
    local P_VALUES=$2
    local ARGS=$3
    local TRAIN_ARGS=$4
    local EVAL_ARGS=$5

    SEEDS=1
    train $MODEL_NAME "--train-num-timesteps=1 $ARGS" # Dummy training.
    PARALLEL=Jobs
    for P_VALUE in $P_VALUES; do
        evaluate $MODEL_NAME pmt0-stocks0.5-p_tax_free$P_VALUE '--master-consume-policy=pmt --master-consume-policy-return=0 --master-asset-allocation-policy={"stocks":0.5,"iid_bonds":0.5}'" --eval-p-tax-free=$P_VALUE $ARGS"
        evaluate $MODEL_NAME pmt0-stocks0.75-p_tax_free$P_VALUE '--master-consume-policy=pmt --master-consume-policy-return=0 --master-asset-allocation-policy={"stocks":0.75,"iid_bonds":0.25}'" --eval-p-tax-free=$P_VALUE $ARGS"
        evaluate $MODEL_NAME pmt0-stocks1-p_tax_free$P_VALUE '--master-consume-policy=pmt --master-consume-policy-return=0 --master-asset-allocation-policy={"stocks":1,"iid_bonds":0}'" --eval-p-tax-free=$P_VALUE $ARGS"
    done
    wait
    PARALLEL=True
}

run ssa_40_plus_3_female-iid_bonds '200000 1000000'
run ssa_40_plus_3_female-iid_bonds-gamma6 '200000 1000000' '--master-gamma=6'
run ssa_40_plus_3_female-iid_bonds-stocks_return0.05 '200000 1000000' '--master-stocks-return=0.05'

run ssa_40_plus_3_female-iid_bonds-static_real_spias '200000 1000000' '--master-real-spias'
run ssa_40_plus_3_female-iid_bonds-static_real_spias-gamma6 '200000 1000000' '--master-gamma=6 --master-real-spias'
run ssa_40_plus_3_female-iid_bonds-static_real_spias-stocks_return0.05 '200000 1000000' '--master-stocks-return=0.05 --master-real-spias'

# Commented out because can't get corresponding Opal results to self-validate.
# run ssa_65_plus_3_female-iid_bonds-static_real_spias '200000 1000000' '--master-real-spias' '' '--eval-age-start=65'
# run ssa_65_plus_3_female-iid_bonds-static_real_spias-gamma6 '200000 1000000' '--master-gamma=6 --master-real-spias' '' '--eval-age-start=65'
# run ssa_65_plus_3_female-iid_bonds-static_real_spias-stocks_return0.05 '200000 1000000' '--master-stocks-return=0.05 --master-real-spias' '' '--eval-age-start=65'

run ssa_40_plus_3_female_female-iid_bonds '400000 2000000' '--master-sex2=female'
run ssa_40_plus_3_female_female-iid_bonds-gamma6 '400000 2000000' '--master-sex2=female --master-gamma=6'
run ssa_40_plus_3_female_female-iid_bonds-stocks_return0.05 '400000 2000000' '--master-sex2=female --master-stocks-return=0.05'

# Comment out because policy only performance not relevant to validation.
#policy_only ssa_40_plus_3_female_female-iid_bonds '400000 2000000' '--master-sex2=female'
#policy_only ssa_40_plus_3_female_female-iid_bonds-gamma6 '400000 2000000' '--master-sex2=female --master-gamma=6'
#policy_only ssa_40_plus_3_female_female-iid_bonds-stocks_return0.05 '400000 2000000' '--master-sex2=female --master-stocks-return=0.05'
