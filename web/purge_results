#!/usr/bin/python3

# AACalc - Asset Allocation Calculator
# Copyright (C) 2009, 2011-2015 Gordon Irlam
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Delete old results directories.

from os import listdir, stat, statvfs
from os.path import basename
from time import time
from shutil import rmtree

keep_free = 0.2  # Keep this much proportion of disk space free.
keep_ifree = 100000  # Keep this many inodes free.
delete_time = 30 * 86400  # Delete normal directories after this long.
healthcheck_delete_time = 3600  # Delete healthcheck directories after this long.
keep_time = 3600  # Keep directories around for this long regardless.
result_dirs = ('/home/ubuntu/aacalc.data/run', '/home/ubuntu/aacalc.data/static/results')

dirs = []
for result_dir in result_dirs:
  dirs.extend(result_dir + '/' + d for d in listdir(result_dir))
dirs.sort(key=lambda d: stat(d).st_mtime)

for d in dirs:

  s = statvfs('/')
  free = float(s.f_bavail) / s.f_blocks
  ifree = s.f_favail
  age = time() - stat(d).st_mtime
  healthcheck = basename(d).startswith('healthcheck-')

  if age <= keep_time:
    break

  if free < keep_free or ifree < keep_ifree or age >= (healthcheck_delete_time if healthcheck else delete_time):
    rmtree(d)
